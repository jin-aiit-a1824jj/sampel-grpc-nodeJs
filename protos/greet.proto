syntax = "proto3";

package greet;

message Greeting {
  string first_name = 1;
  string last_name = 2;
}

message GreetRequest {
  Greeting greeting = 1;
}

message GreetResponse {
  string result = 1;
}

message SumRequest {
  int32 first_number = 1;
  int32 second_number = 2;
}

message SumResponse {
  int32 result = 1;
}

message GreetManyTimesRequest {
  Greeting greeting = 1;
}

message GreetManyTimesResponse {
  string result = 1;
}

message PrimeNumberRequest {
  int32 number = 1;
}

message PrimeNumberResponse {
  int32 result = 1;
}

message LongGreetRequest {
  Greeting greet = 1;
}

message LongGreetResponse {
  string result = 1;
}

message ComputeAverageRequest {
  int32 number = 1;
}

message ComputeAverageResponse {
  double result = 1;
}

message GreetEveryoneRequest {
  Greeting greet = 1;
}

message GreetEveryoneResponse {
  string result = 1;
}

message FindMaximumRequest {
  int32 number = 1;
}

message FindMaximumResponse {
  int32 result = 1;
}

service GreetService {
  //unary API
  rpc Greet(GreetRequest) returns (GreetResponse) {};

  //unary API - exercise
  rpc Sum(SumRequest) returns (SumResponse) {};

  //streaming API
  rpc GreetManyTimes(GreetManyTimesRequest) returns ( stream GreetManyTimesResponse){};

  //Server streaming API - exercise
  rpc PrimeNumber(PrimeNumberRequest) returns(stream PrimeNumberResponse) {};

  //Client Streaming API
  rpc LongGreet (stream LongGreetRequest) returns (LongGreetResponse) {};
  
  //Client streaming API - exercise
  rpc ComputeAverage (stream ComputeAverageRequest) returns (ComputeAverageResponse) {};

  // BiDi Streaming
  rpc GreetEveryone (stream GreetEveryoneRequest) returns (stream GreetEveryoneResponse) {};

  // BiDi Streaming - exercise
  rpc FindMaximum (stream FindMaximumRequest) returns (stream FindMaximumResponse){};
}
